{"ast":null,"code":"var _jsxFileName = \"/home/addworking/Documents/Addworking/backoffice-front/src/views/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport GoogleButton from \"react-google-button\";\nimport \"../../styles/css/style.css\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { setAuthUser, setIsAuthenticated } from \"../../appSlice\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const fetchAuthUser = async () => {\n    const response = await axios.get(process.env.REACT_APP_URL_API_LOGIN + \"/api/v1/auth/user\", {\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).catch(err => {\n      console.log(\"Not properly authenticated\");\n      dispatch(setIsAuthenticated(false));\n      dispatch(setAuthUser(null));\n      history.push(\"/login/error\");\n    });\n\n    if (response && response.data) {\n      console.log(\"User: \", response.data);\n      dispatch(setIsAuthenticated(true));\n      dispatch(setAuthUser(response.data));\n      history.push(\"/dashboard\");\n    }\n  };\n\n  const redirectToGoogleSSO = async () => {\n    let timer = setTimeout(null, 10);\n    const googleLoginURL = process.env.REACT_APP_URL_API_LOGIN + \"/api/v1/login\";\n    const newWindow = window.open(googleLoginURL, \"_blank\", \"width=500,height=600 \");\n\n    if (newWindow) {\n      timer = setInterval(() => {\n        if (newWindow.closed) {\n          console.log(\"Yay we're authenticated\");\n          fetchAuthUser();\n          if (timer) clearInterval(timer);\n        }\n      }, 400);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 offset-3 mt-4\",\n        children: /*#__PURE__*/_jsxDEV(GoogleButton, {\n          onClick: redirectToGoogleSSO\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"ztFVC0/0rI8de3REyGzb7ruuLNE=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/addworking/Documents/Addworking/backoffice-front/src/views/Login/Login.jsx"],"names":["React","useContext","GoogleButton","useHistory","useDispatch","setAuthUser","setIsAuthenticated","axios","Login","history","dispatch","fetchAuthUser","response","get","process","env","REACT_APP_URL_API_LOGIN","withCredentials","headers","catch","err","console","log","push","data","redirectToGoogleSSO","timer","setTimeout","googleLoginURL","newWindow","window","open","setInterval","closed","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,4BAAP;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,gBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AAEA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;;AACA,QAAMO,aAAa,GAAG,YAAY;AAChC,UAAMC,QAAQ,GAAG,MAAML,KAAK,CACvBM,GADkB,CACdC,OAAO,CAACC,GAAR,CAAYC,uBAAZ,GAAsC,mBADxB,EAC6C;AAACC,MAAAA,eAAe,EAAE,IAAlB;AAAwBC,MAAAA,OAAO,EAAC;AAAC,wBAAgB;AAAjB;AAAhC,KAD7C,EAElBC,KAFkB,CAEXC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAZ,MAAAA,QAAQ,CAACJ,kBAAkB,CAAC,KAAD,CAAnB,CAAR;AACAI,MAAAA,QAAQ,CAACL,WAAW,CAAC,IAAD,CAAZ,CAAR;AACAI,MAAAA,OAAO,CAACc,IAAR,CAAa,cAAb;AACD,KAPkB,CAAvB;;AASE,QAAIX,QAAQ,IAAIA,QAAQ,CAACY,IAAzB,EAA+B;AAC7BH,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,QAAQ,CAACY,IAA/B;AACAd,MAAAA,QAAQ,CAACJ,kBAAkB,CAAC,IAAD,CAAnB,CAAR;AACAI,MAAAA,QAAQ,CAACL,WAAW,CAACO,QAAQ,CAACY,IAAV,CAAZ,CAAR;AACAf,MAAAA,OAAO,CAACc,IAAR,CAAa,YAAb;AACD;AACJ,GAhBD;;AAiBA,QAAME,mBAAmB,GAAG,YAAY;AACtC,QAAIC,KAAK,GAAGC,UAAU,CAAC,IAAD,EAAO,EAAP,CAAtB;AACA,UAAMC,cAAc,GAClBd,OAAO,CAACC,GAAR,CAAYC,uBAAZ,GAAsC,eADxC;AAEA,UAAMa,SAAS,GAAGC,MAAM,CAACC,IAAP,CAChBH,cADgB,EAEhB,QAFgB,EAGhB,uBAHgB,CAAlB;;AAKA,QAAIC,SAAJ,EAAe;AACbH,MAAAA,KAAK,GAAGM,WAAW,CAAC,MAAM;AACxB,YAAIH,SAAS,CAACI,MAAd,EAAsB;AACpBZ,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAX,UAAAA,aAAa;AACb,cAAIe,KAAJ,EAAWQ,aAAa,CAACR,KAAD,CAAb;AACZ;AACF,OANkB,EAMhB,GANgB,CAAnB;AAOD;AACF,GAlBD;;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAED;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAlDD;;GAAMjB,K;UACYL,U,EAECC,W;;;KAHbI,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport GoogleButton from \"react-google-button\";\nimport \"../../styles/css/style.css\";\nimport { useHistory } from \"react-router\";\nimport {useDispatch} from \"react-redux\";\nimport { setAuthUser, setIsAuthenticated } from \"../../appSlice\";\nimport axios from \"axios\";\nconst Login = () => {\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n  const fetchAuthUser = async () => {\n    const response = await axios\n        .get(process.env.REACT_APP_URL_API_LOGIN + \"/api/v1/auth/user\", {withCredentials: true, headers:{\"Content-Type\": \"application/json\"}})\n        .catch((err) => {\n          console.log(\"Not properly authenticated\");\n          dispatch(setIsAuthenticated(false));\n          dispatch(setAuthUser(null));\n          history.push(\"/login/error\");\n        });\n\n      if (response && response.data) {\n        console.log(\"User: \", response.data);\n        dispatch(setIsAuthenticated(true));\n        dispatch(setAuthUser(response.data));\n        history.push(\"/dashboard\");\n      }\n  }\n  const redirectToGoogleSSO = async () => {\n    let timer = setTimeout(null, 10);\n    const googleLoginURL =\n      process.env.REACT_APP_URL_API_LOGIN + \"/api/v1/login\";\n    const newWindow = window.open(\n      googleLoginURL,\n      \"_blank\",\n      \"width=500,height=600 \"\n    );\n    if (newWindow) {\n      timer = setInterval(() => {\n        if (newWindow.closed) {\n          console.log(\"Yay we're authenticated\");\n          fetchAuthUser();\n          if (timer) clearInterval(timer);\n        }\n      }, 400);\n    }\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-6 offset-3 mt-4\">\n          <GoogleButton onClick={redirectToGoogleSSO} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}