{"ast":null,"code":"var _jsxFileName = \"/home/addworking/Documents/Addworking/backoffice-front/src/contexts/UserContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\nconst UserContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [userIsAuthenticated, setUserIsAuthenticated] = useState(false);\n  const [user, setUser] = useState();\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      userIsAuthenticated: userIsAuthenticated,\n      setUserIsAuthenticated: setUserIsAuthenticated,\n      user: user,\n      setUser: setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserContextProvider, \"KHrC61PvHDRP1XdxclglRIa5IIQ=\");\n\n_c = UserContextProvider;\nexport default UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["/home/addworking/Documents/Addworking/backoffice-front/src/contexts/UserContext.jsx"],"names":["React","createContext","useState","UserContext","UserContextProvider","children","userIsAuthenticated","setUserIsAuthenticated","user","setUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;;AAEP,MAAMG,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDL,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,mBAAmB,EAAEA,mBADhB;AAELC,MAAAA,sBAAsB,EAAEA,sBAFnB;AAGLC,MAAAA,IAAI,EAAEA,IAHD;AAILC,MAAAA,OAAO,EAAEA;AAJJ,KADT;AAAA,cAQGJ;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAfD;;GAAMD,mB;;KAAAA,mB;AAiBN,eAAeA,mBAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = ({ children }) => {\n  const [userIsAuthenticated, setUserIsAuthenticated] = useState(false);\n  const [user, setUser] = useState();\n  return (\n    <UserContext.Provider\n      value={{\n        userIsAuthenticated: userIsAuthenticated,\n        setUserIsAuthenticated: setUserIsAuthenticated,\n        user: user,\n        setUser: setUser,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserContextProvider;\n"]},"metadata":{},"sourceType":"module"}