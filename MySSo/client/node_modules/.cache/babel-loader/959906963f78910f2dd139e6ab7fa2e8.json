{"ast":null,"code":"var _jsxFileName = \"/home/addworking/Documents/Addworking/backoffice-front/src/views/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport GoogleButton from \"react-google-button\";\nimport \"../../styles/css/style.css\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const {\n    setUserIsAuthenticated,\n    setUser\n  } = useContext(UserContext);\n  const history = useHistory();\n\n  const fetchAuthUser = () => {\n    fetch(process.env.REACT_APP_URL_API_LOGIN + \"/api/v1/auth/user\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      console.log(response);\n      return response.json();\n    }).then(response => {\n      if (response) {\n        console.log(\"User :\", response);\n        setUserIsAuthenticated(true);\n        setUser(response);\n        history.push(\"/dashboard\");\n      }\n    }).catch(error => console.error(error));\n  };\n\n  const redirectToGoogleSSO = async () => {\n    let timer = setTimeout(null, 10);\n    const googleLoginURL = process.env.REACT_APP_URL_API_LOGIN + \"/api/v1/login\";\n    const newWindow = window.open(googleLoginURL, \"_blank\", \"width=500,height=600 \");\n\n    if (newWindow) {\n      timer = setInterval(() => {\n        if (newWindow.closed) {\n          fetchAuthUser();\n          if (timer) clearInterval(timer);\n        }\n      }, 400);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 offset-3 mt-4\",\n        children: /*#__PURE__*/_jsxDEV(GoogleButton, {\n          onClick: redirectToGoogleSSO\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"OS8p80bF0OsT4k/F4DGVVYBfpCI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/addworking/Documents/Addworking/backoffice-front/src/views/Login/Login.jsx"],"names":["React","useContext","GoogleButton","UserContext","useHistory","Login","setUserIsAuthenticated","setUser","history","fetchAuthUser","fetch","process","env","REACT_APP_URL_API_LOGIN","method","credentials","headers","then","response","console","log","json","push","catch","error","redirectToGoogleSSO","timer","setTimeout","googleLoginURL","newWindow","window","open","setInterval","closed","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,4BAAP;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA,sBAAF;AAA0BC,IAAAA;AAA1B,MAAsCN,UAAU,CAACE,WAAD,CAAtD;AACA,QAAMK,OAAO,GAAGJ,UAAU,EAA1B;;AAEA,QAAMK,aAAa,GAAG,MAAM;AAC1BC,IAAAA,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,uBAAZ,GAAsC,mBAAvC,EAA4D;AAC/DC,MAAAA,MAAM,EAAE,KADuD;AAE/DC,MAAAA,WAAW,EAAE,SAFkD;AAG/DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHsD,KAA5D,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,KAVH,EAWGJ,IAXH,CAWSC,QAAD,IAAc;AAClB,UAAIA,QAAJ,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB;AACAZ,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAC,QAAAA,OAAO,CAACW,QAAD,CAAP;AACAV,QAAAA,OAAO,CAACc,IAAR,CAAa,YAAb;AACD;AACF,KAlBH,EAmBGC,KAnBH,CAmBUC,KAAD,IAAWL,OAAO,CAACK,KAAR,CAAcA,KAAd,CAnBpB;AAoBD,GArBD;;AAuBA,QAAMC,mBAAmB,GAAG,YAAY;AACtC,QAAIC,KAAK,GAAGC,UAAU,CAAC,IAAD,EAAO,EAAP,CAAtB;AACA,UAAMC,cAAc,GAClBjB,OAAO,CAACC,GAAR,CAAYC,uBAAZ,GAAsC,eADxC;AAEA,UAAMgB,SAAS,GAAGC,MAAM,CAACC,IAAP,CAChBH,cADgB,EAEhB,QAFgB,EAGhB,uBAHgB,CAAlB;;AAKA,QAAIC,SAAJ,EAAe;AACbH,MAAAA,KAAK,GAAGM,WAAW,CAAC,MAAM;AACxB,YAAIH,SAAS,CAACI,MAAd,EAAsB;AACpBxB,UAAAA,aAAa;AACb,cAAIiB,KAAJ,EAAWQ,aAAa,CAACR,KAAD,CAAb;AACZ;AACF,OALkB,EAKhB,GALgB,CAAnB;AAMD;AACF,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAED;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAvDD;;GAAMpB,K;UAEYD,U;;;KAFZC,K;AAyDN,eAAeA,KAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport GoogleButton from \"react-google-button\";\nimport \"../../styles/css/style.css\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { useHistory } from \"react-router\";\n\nconst Login = () => {\n  const { setUserIsAuthenticated, setUser } = useContext(UserContext);\n  const history = useHistory();\n\n  const fetchAuthUser = () => {\n    fetch(process.env.REACT_APP_URL_API_LOGIN + \"/api/v1/auth/user\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        console.log(response);\n        return response.json();\n      })\n      .then((response) => {\n        if (response) {\n          console.log(\"User :\", response);\n          setUserIsAuthenticated(true);\n          setUser(response);\n          history.push(\"/dashboard\");\n        }\n      })\n      .catch((error) => console.error(error));\n  };\n\n  const redirectToGoogleSSO = async () => {\n    let timer = setTimeout(null, 10);\n    const googleLoginURL =\n      process.env.REACT_APP_URL_API_LOGIN + \"/api/v1/login\";\n    const newWindow = window.open(\n      googleLoginURL,\n      \"_blank\",\n      \"width=500,height=600 \"\n    );\n    if (newWindow) {\n      timer = setInterval(() => {\n        if (newWindow.closed) {\n          fetchAuthUser();\n          if (timer) clearInterval(timer);\n        }\n      }, 400);\n    }\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-6 offset-3 mt-4\">\n          <GoogleButton onClick={redirectToGoogleSSO} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}